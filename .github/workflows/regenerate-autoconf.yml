name: "Manual: regen autoconf"

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  regenerate:
    # The type of runner that the job will run on
    # Seee also: https://github.com/actions/runner-images#github-actions-runner-images
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkout submodules / prerequisites
      run: git submodule update --init --recursive
    
    - name: "List the autoconf prerequisites' tool versions"
      run: |
        autoconf --version
        automake --version
        autoheader --version
        make --version
    
    - name: Prep the automake and autoconf tools
      run: |
        ls *.sh
        chmod a+x *.sh
        chmod a+x configure
      
    - name: Regenerate the autoconf scripts
      run: ./mk_autoconf.sh
      
    - name: Add & Commit
      # You may pin to the exact commit or the version.
      # uses: EndBug/add-and-commit@61a88be553afe4206585b31aa72387c64295d08b
      uses: EndBug/add-and-commit@v9.1.1
      with:
        # Arguments for the git add command
        #add: # optional, default is .
        # The name of the user that will be displayed as the author of the commit
        author_name: GitHub_Actions
        # The email of the user that will be displayed as the author of the commit
        author_email: gup-regenerate+github-actions[bot]@users.noreply.github.com
        # Additional arguments for the git commit command
        #commit: # optional
        # The name of the custom committer you want to use
        committer_name: GitHub_Actions
        # The email of the custom committer you want to use
        committer_email: gup-regenerate+github-actions[bot]@users.noreply.github.com
        # The directory where your repository is located. You should use actions/checkout first to set it up
        #cwd: # optional, default is .
        # How the action should fill missing author name or email.
        #default_author: # optional, default is github_actor
        # Arguments for the git fetch command (if 'false', the action won't fetch the repo)
        #fetch: # optional, default is --tags --force
        # The message for the commit
        message: Regenerated the autoconf scripts
        # The name of the branch to create.
        #new_branch: # optional
        # The way the action should handle pathspec errors from the add and remove commands.
        #pathspec_error_handling: # optional, default is ignore
        # Arguments for the git pull command. By default, the action does not pull.
        #pull: # optional
        # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (more info in the README)
        push: true # optional, default is true
        # Arguments for the git rm command
        #remove: # optional
        # Arguments for the git tag command (the tag name always needs to be the first word not preceded by a hyphen)
        #tag: # optional
        # Arguments for the git push --tags command (any additional argument will be added after --tags)
        #tag_push: # optional
        # The token used to make requests to the GitHub API. It's NOT used to make commits and should not be changed.
        #github_token: # optional, default is ${{ github.token }}      
